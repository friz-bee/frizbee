name: Build and Push Docker Image

# Trigger the workflow when a version tag is pushed (e.g., v1.0.0)
on:
  push:
    tags:
      - 'v*.*.*'

# Required permissions for GitHub Actions
permissions:
  contents: read # Read repository contents
  packages: write # Push to GitHub Container Registry

jobs:
  # Run Cypress tests before building the Docker image
  cypress-tests:
    uses: ./.github/workflows/cypress.yml
    secrets: inherit # Pass all secrets to the Cypress workflow

  # Build and push the Docker image to GitHub Container Registry
  build-and-push:
    needs: cypress-tests # Only run if tests pass
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # Step 2: Set up Docker Buildx for multi-architecture builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Extract the tag name to use as Docker image version
      - name: Extract tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Step 5: Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.13.0
        with:
          context: . # Use the current directory as build context
          push: true # Push the image after building
          tags: |
            ghcr.io/${{ github.repository_owner }}/frizbee:${{ env.TAG_NAME }}  # Versioned tag
            ghcr.io/${{ github.repository_owner }}/frizbee:latest               # Latest tag
